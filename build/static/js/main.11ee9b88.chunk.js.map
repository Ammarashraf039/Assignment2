{"version":3,"sources":["Constants/Constants.js","components/Movies.js","components/Options.js","components/HomeComponent.js","components/DetailViewComponent.js","components/ReviewComponent.js","components/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["API_KEY","Basic_Url","Image_URL","Movies","props","state","movies","moviesList","nextProps","this","setState","length","className","style","backgroundColor","margin","map","item","index","key","to","id","width","marginLeft","marginRight","src","poster_path","title","release_date","vote_average","Component","Options","languages","languagesOption","textAlign","alignSelf","padding","type","placeholder","onChange","e","textBaseSearch","target","value","name","languageChanged","code","HomeComponent","console","log","isLoading","error","languageChagned","bind","textSearch","language","defaultMovies","text","nameSearchMovies","axios","get","then","response","data","results","catch","url","Search_URL","DetailViewComponent","detail","movieId","match","params","marginTop","overview","runtime","genres","spoken_languages","production_companies","Button","ReviewComponent","reviews","scope","author","content","NavBar","bg","variant","Brand","href","alignItems","Link","App","path","render","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"2TAAaA,EAAU,mCACVC,EAAY,sCAIZC,EAAY,kCCAJC,E,kDAEjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,OAAQ,EAAKF,MAAMG,YAHR,E,sEAOOC,GACtBC,KAAKC,SAAS,CAAEJ,OAAQE,EAAUD,e,+BAKlC,OAAIE,KAAKJ,MAAMC,OAAOK,OAAS,EAEvB,yBAAKC,UAAU,MAAMC,MAAO,CAAEC,gBAAiB,UAAWC,OAAQ,SAC7DN,KAAKJ,MAAMC,OAAOU,KAAI,SAACC,EAAMC,GAAP,OACnB,yBAAKN,UAAU,WAAWO,IAAKD,EAAOL,MAAO,CAAEE,OAAQ,SACnD,yBAAKF,MAAO,CAAEC,gBAAiB,UAE3B,kBAAC,IAAD,CAAMM,GAAI,WAAaH,EAAKI,IACxB,yBAAKC,MAAM,MAAMT,MAAO,CAAEU,WAAY,OAAQC,YAAa,QACvDC,IAAKvB,EAAYe,EAAKS,cAE1B,6BACI,4BAAKT,EAAKU,OACV,8BAAQV,EAAKW,cACb,2BAAIX,EAAKY,sBAWjC,gD,GAxCoBC,aCFfC,E,kDAEjB,WAAY3B,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACT2B,UAAW,EAAK5B,MAAM6B,iBAHX,E,qDAOT,IAAD,OACL,OACI,yBAAKrB,UAAU,YAAYC,MAAO,CAAEC,gBAAiB,UAAWS,WAAY,UAExE,wBAAIV,MAAO,CAAEqB,UAAW,OAAQC,UAAW,UAAWC,QAAS,SAC3D,iDACA,2BAAOC,KAAK,OAAOC,YAAY,eAAeC,SAAU,SAAAC,GAAC,OAAI,EAAKpC,MAAMqC,eAAeD,EAAEE,OAAOC,UAChG,wCAEA,4BAAQC,KAAK,SAASvB,GAAG,UACrB,4BAAQsB,MAAM,UAAd,UACA,4BAAQA,MAAM,aAAd,aACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,QAAd,SAGJ,6BAZJ,KAYY,6BACR,+CACA,4BAAQC,KAAK,QAAQvB,GAAG,SACpB,4BAAQsB,MAAM,OAAd,OACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,SAGJ,yCACA,4BAAQC,KAAK,SAASvB,GAAG,UACrB,4BAAQsB,MAAM,OAAd,OACA,4BAAQA,MAAM,KAAd,MACA,4BAAQA,MAAM,KAAd,MACA,4BAAQA,MAAM,KAAd,OAGJ,0CACA,4BAAQC,KAAK,UAAUvB,GAAG,WACtB,4BAAQsB,MAAM,cAAd,cACA,4BAAQA,MAAM,eAAd,iBAGJ,2CACA,4BAAQC,KAAK,YAAYvB,GAAG,YAAYkB,SAAU,SAAAC,GAAC,OAAI,EAAKpC,MAAMyC,gBAAgBL,EAAEE,OAAOC,SACtFlC,KAAKJ,MAAM2B,UAAUhB,KAAI,SAACC,EAAMC,GAC7B,OAAO,4BAAQC,IAAKD,EAAOyB,MAAO1B,EAAK6B,MAAO7B,EAAK2B,gB,GApD1Cd,aCGhBiB,E,kDAEjB,WAAY3C,GAAQ,IAAD,6BACf,cAAMA,GACN4C,QAAQC,IAAI,oBAEZ,EAAK5C,MAAQ,CACTC,OAAQ,GACR4C,WAAW,EACXC,MAAO,GACPnB,UAAW,CACP,CACIY,KAAM,MACNE,KAAM,MAEV,CACIF,KAAM,UACNE,KAAM,MAEV,CACIF,KAAM,UACNE,KAAM,QAKlB,EAAKM,gBAAkB,EAAKA,gBAAgBC,KAArB,gBACvB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAzBH,E,4DA4BHE,GAER9C,KAAK+C,kB,iCAOFC,GACM,KAATA,EACAhD,KAAK+C,gBAGL/C,KAAKiD,iBAAiBD,K,0CAK1BhD,KAAK+C,kB,sCAGQ,IAAD,OACZ,IACI/C,KAAKC,SAAS,CACVyC,MAAO,GACPD,WAAW,EACX5C,OAAQ,KAGZqD,IAAMC,IADI3D,uFAEL4D,MAAK,SAAAC,GACF,EAAKpD,SAAS,CACVyC,MAAO,GACPD,WAAW,EACX5C,OAAQwD,EAASC,KAAKC,aAG7BC,OAAM,SAAAzB,GACH,EAAK9B,SAAS,CACVyC,MAAOX,EACPU,WAAW,EACX5C,OAAQ,QAIxB,MAAOkC,GACH/B,KAAKC,SAAS,CACVyC,MAAOX,EACPU,WAAW,EACX5C,OAAQ,Q,uCAKHmD,GAAO,IAAD,OACnB,IACIhD,KAAKC,SAAS,CACVyC,MAAO,GACPD,WAAW,EACX5C,OAAQ,KAGZ,IAAI4D,EAAMC,qDAAwCnE,EH5FzC,UG4F2DyD,EACpEE,IAAMC,IAAIM,GACLL,MAAK,SAAAC,GACF,EAAKpD,SAAS,CACVyC,MAAO,GACPD,WAAW,EACX5C,OAAQwD,EAASC,KAAKC,aAG7BC,OAAM,SAAAzB,GACH,EAAK9B,SAAS,CACVyC,MAAOX,EACPU,WAAW,EACX5C,OAAQ,QAIxB,MAAOkC,GACH/B,KAAKC,SAAS,CACVyC,MAAOX,EACPU,WAAW,EACX5C,OAAQ,Q,+BAMhB,OACI,6BACI,yBAAKM,UAAU,qBAAoB,2CAAgB,0BAAMA,UAAU,kCAAhB,QACnD,6BACA,kBAAC,EAAD,CAASqB,gBAAiBxB,KAAKJ,MAAM2B,UAAWa,gBAAiBpC,KAAK2C,gBAAiBX,eAAgBhC,KAAK6C,aAC5G,kBAAC,EAAD,CAAQ/C,WAAYE,KAAKJ,MAAMC,c,GA7HJwB,a,QCAtBsC,E,kDAEjB,WAAYhE,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACT6C,WAAW,EACXC,MAAO,GACPkB,OAAQ,MALG,E,gEASE,IAAD,OAChB,IACI,IAAMC,EAAU7D,KAAKL,MAAMmE,MAAMC,OAAOnD,GACxCZ,KAAKC,SAAS,CACVyC,MAAO,GACPD,WAAW,EACXmB,OAAQ,OAEZ,IAAMH,EAAMjE,EAAYqE,EAAZrE,YAAiDD,EAC7D2D,IAAMC,IAAIM,GACLL,MAAK,SAAAC,GACF,EAAKpD,SAAS,CACVyC,MAAO,GACPD,WAAW,EACXmB,OAAQP,EAASC,UAGxBE,OAAM,SAAAzB,GACH,EAAK9B,SAAS,CACVyC,MAAOX,EACPU,WAAW,EACXmB,OAAQ,UAIxB,MAAO7B,GACH/B,KAAKC,SAAS,CACVyC,MAAOX,EACPU,WAAW,EACXmB,OAAQ,U,+BAKhB,MAAwB,IAApB5D,KAAKJ,MAAM8C,OAAoC,MAArB1C,KAAKJ,MAAMgE,OAEjC,6BACI,yBAAKzD,UAAU,MAAMO,IAAKV,KAAKJ,MAAMgE,OAAOhD,IACxC,yBAAKR,MAAO,CAAEC,gBAAiB,QAAS2D,UAAW,OAAQlD,WAAY,QAAUX,UAAU,YACvF,2BACI,yBAAKU,MAAM,OAAOT,MAAO,CAAEU,WAAY,OAAQC,YAAa,QACxDC,IAAKvB,EAAYO,KAAKJ,MAAMgE,OAAO3C,gBAI/C,yBAAKd,UAAU,YACX,yBAAKC,MAAO,CAAEC,gBAAiB,QAAS2D,UAAW,OAAQvC,UAAW,SAClE,4BAAKzB,KAAKJ,MAAMgE,OAAO1C,OACvB,wBAAId,MAAO,CAAEqB,UAAW,SAAxB,YACA,uBAAGrB,MAAO,CAAEqB,UAAW,SAAWzB,KAAKJ,MAAMgE,OAAOK,UACpD,wBAAI7D,MAAO,CAAE4D,UAAW,QAAU7D,UAAU,oCACxC,wBAAIA,UAAU,wCAAd,kBACA,wBAAIA,UAAU,oBAAoBH,KAAKJ,MAAMgE,OAAOM,SACpD,wBAAI/D,UAAU,wCAAd,gBACA,wBAAIA,UAAU,oBAAoBH,KAAKJ,MAAMgE,OAAOzC,eACxD,wBAAIf,MAAO,CAAE4D,UAAW,QAAU7D,UAAU,oCACxC,wBAAIA,UAAU,wCAAd,UACCH,KAAKJ,MAAMgE,OAAOO,OAAO5D,KAAI,SAACC,EAAMC,GAAP,OAC1B,wBAAIN,UAAU,kBAAkBO,IAAKD,GAAQD,EAAK2B,UAG1D,wBAAI/B,MAAO,CAAE4D,UAAW,QAAU7D,UAAU,oCACxC,wBAAIA,UAAU,wCAAd,oBACCH,KAAKJ,MAAMgE,OAAOQ,iBAAiB7D,KAAI,SAACC,EAAMC,GAAP,OACpC,wBAAIN,UAAU,kBAAkBO,IAAKD,GAAQD,EAAK2B,UAG1D,wBAAI/B,MAAO,CAAE4D,UAAW,QAAU7D,UAAU,oCACxC,wBAAIA,UAAU,wCAAd,wBACCH,KAAKJ,MAAMgE,OAAOS,qBAAqB9D,KAAI,SAACC,EAAMC,GAAP,OACxC,wBAAIN,UAAU,kBAAkBO,IAAKD,GAAQD,EAAK2B,UAG1D,kBAAC,IAAD,CAAMxB,GAAI,YAAcX,KAAKJ,MAAMgE,OAAOhD,IACtC,kBAAC0D,EAAA,EAAD,CAAQlE,MAAO,CAAE4D,UAAW,SAA5B,qBAQnBhE,KAAKJ,MAAM6C,UAEZ,8CAMsB,KAArBzC,KAAKJ,MAAM8C,MAGZ,6BACK1C,KAAKJ,MAAM8C,OAMhB,gD,GA/GiCrB,aCF5BkD,E,kDACjB,WAAY5E,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACT8C,MAAO,GACPD,WAAW,EACX+B,QAAS,IANE,E,gEAUE,IAAD,OAChB,IACI,IAAMX,EAAU7D,KAAKL,MAAMmE,MAAMC,OAAOnD,GACxCZ,KAAKC,SAAS,CACVyC,MAAO,GACPD,WAAW,EACX+B,QAAS,KAEb,IAAMf,EAAMjE,EAAYqE,EAAZrE,oBAA8DD,EAC1E2D,IAAMC,IAAIM,GACLL,MAAK,SAAAC,GACF,EAAKpD,SAAS,CACVyC,MAAO,GACPD,WAAW,EACX+B,QAASnB,EAASC,KAAKC,aAG9BC,OAAM,SAAAzB,GACH,EAAK9B,SAAS,CACVyC,MAAOX,EACPU,WAAW,EACX+B,QAAS,QAIzB,MAAOzC,GACH/B,KAAKC,SAAS,CACVyC,MAAOX,EACPU,WAAW,EACX+B,QAAS,Q,+BAMjB,OAAIxE,KAAKJ,MAAM4E,QAAQtE,OAAS,EAExB,6BACI,2BAAOC,UAAU,kDACb,+BACI,4BACI,wBAAIsE,MAAM,OAAV,UACA,wBAAIA,MAAM,OAAV,aAGR,+BACKzE,KAAKJ,MAAM4E,QAAQjE,KAAI,SAACC,EAAMC,GAAP,OACpB,4BACI,4BAAKD,EAAKkE,QACV,4BAAKlE,EAAKmE,gBAS7B3E,KAAKJ,MAAM6C,UAEZ,+CAM0B,IAAzBzC,KAAKJ,MAAM6C,WAAqD,IAA9BzC,KAAKJ,MAAM4E,QAAQtE,OAEtD,0CAMsB,KAArBF,KAAKJ,MAAM8C,MAEZ,6BACK1C,KAAKJ,MAAM8C,OAKZ,gD,GA7FyBrB,a,uBCDxBuD,E,uKAEb,OACI,6BACI,kBAAC,IAAD,CAAuBC,GAAG,OAAOC,QAAQ,QACrC,kBAAC,IAAsBC,MAAvB,CAA6BC,KAAK,KAAlC,eACA,kBAAC,IAAD,CAAoB7E,UAAU,UAAUC,MAAO,CAAC6E,WAAY,aACxD,kBAAC,IAAmBC,KAApB,CAAyBF,KAAK,KAA9B,QACA,kBAAC,IAAmBE,KAApB,CAAyBF,KAAK,KAA9B,aACA,kBAAC,IAAmBE,KAApB,CAAyBF,KAAK,KAA9B,mBACA,kBAAC,IAAmBE,KAApB,CAAyBF,KAAK,KAA9B,iB,GAVY3D,aCwBrB8D,MApBf,WACE,OACE,yBAAKhF,UAAU,OAEb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAOiF,KAAK,eAAeC,OAAQ,SAAC1F,GAAD,OAAW,kBAAC,EAAoBA,MACnE,kBAAC,IAAD,CAAOyF,KAAK,cAAcC,OAAQ,SAAC1F,GAAD,OAAW,kBAAC,EAAwBA,MAEtE,kBAAC,IAAD,CAAOyF,KAAK,KACV,kBAAC,EAAD,WCPQE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS3B,MACvB,2D,MCXN4B,IAASL,OACP,kBAAC,IAAMM,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB5C,MAAK,SAAA6C,GACJA,EAAaC,gBAEd1C,OAAM,SAAAd,GACLH,QAAQG,MAAMA,EAAMyD,c","file":"static/js/main.11ee9b88.chunk.js","sourcesContent":["export const API_KEY = 'b1cd9c8c87af8933ad0187beab32db14'\r\nexport const Basic_Url = 'https://api.themoviedb.org/3/movie/'\r\nexport const API_KEY_TEXT = 'api_key'\r\nexport const Movie_URL = 'popular'\r\nexport const Review_Url = '/reviews'\r\nexport const Image_URL = 'http://image.tmdb.org/t/p/w185/'\r\nexport const Search_URL = 'https://api.themoviedb.org/3/search/movie'\r\nexport const Query = '&query='","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { API_KEY, API_KEY_TEXT, Basic_Url, Image_URL, Movie_URL } from '../Constants/Constants';\r\n\r\nexport default class Movies extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            movies: this.props.moviesList\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({ movies: nextProps.moviesList })\r\n    }\r\n\r\n    render() {\r\n        let { isLoggedIn } = true;\r\n        if (this.state.movies.length > 0) {\r\n            return (\r\n                <div className=\"row\" style={{ backgroundColor: '#17a2b8', margin: '15xp' }}>\r\n                    {this.state.movies.map((item, index) => (\r\n                        <div className='col-sm-3' key={index} style={{ margin: '15xp' }}>\r\n                            <div style={{ backgroundColor: 'white' }}>\r\n\r\n                                <Link to={'/detail/' + item.id}>\r\n                                    <img width='80%' style={{ marginLeft: 'auto', marginRight: 'auto' }}\r\n                                        src={Image_URL + item.poster_path} />\r\n\r\n                                    <div >\r\n                                        <h4>{item.title}</h4>\r\n                                        <span >{item.release_date}</span>\r\n                                        <p>{item.vote_average}</p>\r\n                                    </div>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div>Please wait</div>\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport * as ReactBootStrap from 'react-bootstrap'\r\n\r\nexport default class Options extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            languages: this.props.languagesOption\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-md-12\" style={{ backgroundColor: '#ffc107', marginLeft: '-15xp' }}>\r\n\r\n                <h2 style={{ textAlign: 'left', alignSelf: 'stretch', padding: '15px' }}>\r\n                    <span >List Filtering:</span>\r\n                    <input type='text' placeholder='Title Search' onChange={e => this.props.textBaseSearch(e.target.value)} ></input>\r\n                    <span>Genre:</span>\r\n\r\n                    <select name=\"movies\" id=\"movies\">\r\n                        <option value=\"Action\">Action</option>\r\n                        <option value=\"Education\">Education</option>\r\n                        <option value=\"English\">English</option>\r\n                        <option value=\"Urdu\">Urdu</option>\r\n                    </select>\r\n\r\n                    <br />  <br />\r\n                    <span>Release Date:</span>\r\n                    <select name=\"dates\" id=\"dates\">\r\n                        <option value=\"All\">All</option>\r\n                        <option value=\"1993\">1993</option>\r\n                        <option value=\"1992\">1992</option>\r\n                        <option value=\"1991\">1991</option>\r\n                        <option value=\"1990\">1990</option>\r\n                    </select>\r\n\r\n                    <span>Rating:</span>\r\n                    <select name=\"rating\" id=\"rating\">\r\n                        <option value=\"All\">All</option>\r\n                        <option value=\"9\">9+</option>\r\n                        <option value=\"8\">8+</option>\r\n                        <option value=\"7\">7+</option>\r\n                    </select>\r\n\r\n                    <span>Sort By:</span>\r\n                    <select name=\"sorting\" id=\"sorting\">\r\n                        <option value=\"Popularity\">Popularity</option>\r\n                        <option value=\"ReleaseDate\">Release Date</option>\r\n                    </select>\r\n\r\n                    <span>Language:</span>\r\n                    <select name=\"languages\" id=\"languages\" onChange={e => this.props.languageChanged(e.target.value)}>\r\n                        {this.state.languages.map((item, index) => {\r\n                            return <option key={index} value={item.code}>{item.name}</option>\r\n                        })\r\n                        }\r\n                    </select>\r\n                </h2>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Movies from './Movies';\r\nimport Options from './Options';\r\nimport axios from 'axios'\r\nimport { API_KEY, API_KEY_TEXT, Basic_Url, Image_URL, Movie_URL, Query, Search_URL } from '../Constants/Constants';\r\n\r\nexport default class HomeComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"I am constructor\")\r\n\r\n        this.state = {\r\n            movies: [],\r\n            isLoading: false,\r\n            error: '',\r\n            languages: [\r\n                {\r\n                    name: 'All',\r\n                    code: '-1'\r\n                },\r\n                {\r\n                    name: 'English',\r\n                    code: 'en'\r\n                },\r\n                {\r\n                    name: 'Russian',\r\n                    code: 'ru'\r\n                }\r\n            ]\r\n        }\r\n\r\n        this.languageChagned = this.languageChagned.bind(this)\r\n        this.textSearch = this.textSearch.bind(this)\r\n    }\r\n\r\n    languageChagned(language) {\r\n        if (language === '-1') {\r\n            this.defaultMovies()\r\n        }\r\n        else {\r\n            this.defaultMovies()\r\n        }\r\n    }\r\n\r\n    textSearch(text) {\r\n        if (text === '') {\r\n            this.defaultMovies()\r\n        }\r\n        else {\r\n            this.nameSearchMovies(text);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.defaultMovies()\r\n    }\r\n\r\n    defaultMovies() {\r\n        try {\r\n            this.setState({\r\n                error: '',\r\n                isLoading: true,\r\n                movies: []\r\n            })\r\n            let url = Basic_Url + Movie_URL + '?' + API_KEY_TEXT + '=' + API_KEY\r\n            axios.get(url)\r\n                .then(response => {\r\n                    this.setState({\r\n                        error: '',\r\n                        isLoading: false,\r\n                        movies: response.data.results\r\n                    })\r\n                })\r\n                .catch(e => {\r\n                    this.setState({\r\n                        error: e,\r\n                        isLoading: false,\r\n                        movies: []\r\n                    })\r\n                })\r\n        }\r\n        catch (e) {\r\n            this.setState({\r\n                error: e,\r\n                isLoading: false,\r\n                movies: []\r\n            })\r\n        }\r\n    }\r\n\r\n    nameSearchMovies(text) {\r\n        try {\r\n            this.setState({\r\n                error: '',\r\n                isLoading: true,\r\n                movies: []\r\n            })\r\n            \r\n            let url = Search_URL + '?' + API_KEY_TEXT + '=' + API_KEY + Query + text\r\n            axios.get(url)\r\n                .then(response => {\r\n                    this.setState({\r\n                        error: '',\r\n                        isLoading: false,\r\n                        movies: response.data.results\r\n                    })\r\n                })\r\n                .catch(e => {\r\n                    this.setState({\r\n                        error: e,\r\n                        isLoading: false,\r\n                        movies: []\r\n                    })\r\n                })\r\n        }\r\n        catch (e) {\r\n            this.setState({\r\n                error: e,\r\n                isLoading: false,\r\n                movies: []\r\n            })\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"col-md-6 offset-2\"><h2>All Movies  <span className=\"badge badge-pill badge-success\">20</span></h2></div>\r\n                <br />\r\n                <Options languagesOption={this.state.languages} languageChanged={this.languageChagned} textBaseSearch={this.textSearch} />\r\n                <Movies moviesList={this.state.movies} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { API_KEY, API_KEY_TEXT, Basic_Url, Image_URL, Movie_URL } from '../Constants/Constants';\r\n\r\nexport default class DetailViewComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isLoading: false,\r\n            error: '',\r\n            detail: null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        try {\r\n            const movieId = this.props.match.params.id\r\n            this.setState({\r\n                error: '',\r\n                isLoading: true,\r\n                detail: null\r\n            })\r\n            const url = Basic_Url + movieId + '?' + API_KEY_TEXT + '=' + API_KEY\r\n            axios.get(url)\r\n                .then(response => {\r\n                    this.setState({\r\n                        error: '',\r\n                        isLoading: false,\r\n                        detail: response.data\r\n                    })\r\n                })\r\n                .catch(e => {\r\n                    this.setState({\r\n                        error: e,\r\n                        isLoading: false,\r\n                        detail: null\r\n                    })\r\n                })\r\n        }\r\n        catch (e) {\r\n            this.setState({\r\n                error: e,\r\n                isLoading: false,\r\n                detail: null\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        if (this.state.error == '' && this.state.detail != null) {\r\n            return (\r\n                <div>\r\n                    <div className='row' key={this.state.detail.id}>\r\n                        <div style={{ backgroundColor: 'white', marginTop: '50px', marginLeft: '50px' }} className='col-sm-3'>\r\n                            <a>\r\n                                <img width='100%' style={{ marginLeft: 'auto', marginRight: 'auto' }}\r\n                                    src={Image_URL + this.state.detail.poster_path} />\r\n                            </a>\r\n                        </div>\r\n\r\n                        <div className='col-sm-6'>\r\n                            <div style={{ backgroundColor: 'white', marginTop: '50px', textAlign: 'left' }}>\r\n                                <h2>{this.state.detail.title}</h2>\r\n                                <h4 style={{ textAlign: 'left' }}>Overview</h4>\r\n                                <p style={{ textAlign: 'left' }}>{this.state.detail.overview}</p>\r\n                                <ul style={{ marginTop: '10px' }} className=\"list-group list-group-horizontal\">\r\n                                    <li className=\"list-group-item list-group-item-dark\">Runtime (min.)</li>\r\n                                    <li className=\"list-group-item \">{this.state.detail.runtime}</li>\r\n                                    <li className=\"list-group-item list-group-item-dark\">Release Date</li>\r\n                                    <li className=\"list-group-item \">{this.state.detail.release_date}</li></ul>\r\n                                <ul style={{ marginTop: '10px' }} className=\"list-group list-group-horizontal\">\r\n                                    <li className=\"list-group-item list-group-item-dark\">Genres</li>\r\n                                    {this.state.detail.genres.map((item, index) => (\r\n                                        <li className=\"list-group-item\" key={index}>{item.name}</li>\r\n                                    ))}\r\n                                </ul>\r\n                                <ul style={{ marginTop: '10px' }} className=\"list-group list-group-horizontal\">\r\n                                    <li className=\"list-group-item list-group-item-dark\">Spoken Languages</li>\r\n                                    {this.state.detail.spoken_languages.map((item, index) => (\r\n                                        <li className=\"list-group-item\" key={index}>{item.name}</li>\r\n                                    ))}\r\n                                </ul>\r\n                                <ul style={{ marginTop: '10px' }} className=\"list-group list-group-horizontal\">\r\n                                    <li className=\"list-group-item list-group-item-dark\">Production Companies</li>\r\n                                    {this.state.detail.production_companies.map((item, index) => (\r\n                                        <li className=\"list-group-item\" key={index}>{item.name}</li>\r\n                                    ))}\r\n                                </ul>\r\n                                <Link to={'/reviews/' + this.state.detail.id}>\r\n                                    <Button style={{ marginTop: '10px' }}>View Reviews</Button>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else if (this.state.isLoading) {\r\n            return (\r\n                <div>\r\n                    Loading Data!\r\n                </div>\r\n            )\r\n\r\n        }\r\n        else if (this.state.error !== '') {\r\n\r\n            return (\r\n                <div>\r\n                    {this.state.error}\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                    Please wait\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport { API_KEY, API_KEY_TEXT, Basic_Url, Review_Url } from '../Constants/Constants';\r\n\r\nexport default class ReviewComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            error: '',\r\n            isLoading: true,\r\n            reviews: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        try {\r\n            const movieId = this.props.match.params.id\r\n            this.setState({\r\n                error: '',\r\n                isLoading: true,\r\n                reviews: []\r\n            })\r\n            const url = Basic_Url + movieId + Review_Url + '?' + API_KEY_TEXT + '=' + API_KEY\r\n            axios.get(url)\r\n                .then(response => {\r\n                    this.setState({\r\n                        error: '',\r\n                        isLoading: false,\r\n                        reviews: response.data.results\r\n                    })\r\n                })\r\n                .catch(e => {\r\n                    this.setState({\r\n                        error: e,\r\n                        isLoading: false,\r\n                        reviews: []\r\n                    })\r\n                })\r\n        }\r\n        catch (e) {\r\n            this.setState({\r\n                error: e,\r\n                isLoading: false,\r\n                reviews: []\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.reviews.length > 0) {\r\n            return (\r\n                <div>\r\n                    <table className=\"table table-striped table-bordered table-hover\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">Author</th>\r\n                                <th scope=\"col\">Excerpt</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.reviews.map((item, index) => (\r\n                                <tr>\r\n                                    <td>{item.author}</td>\r\n                                    <td>{item.content}</td>\r\n                                </tr>\r\n                            ))}\r\n\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            )\r\n        }\r\n        else if (this.state.isLoading) {\r\n            return (\r\n                <div>\r\n                    Loading Data!\r\n                </div>\r\n            )\r\n\r\n        }\r\n        else if (this.state.isLoading === false && this.state.reviews.length === 0) {\r\n            return (\r\n                <div>\r\n                    No review\r\n                </div>\r\n            )\r\n\r\n        }\r\n        else if (this.state.error !== '') {\r\n            return (\r\n                <div>\r\n                    {this.state.error}\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (<div>\r\n                Please wait\r\n            </div>)\r\n        }\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport * as ReactBootStrap from 'react-bootstrap'\r\n\r\nexport default class NavBar extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ReactBootStrap.Navbar bg=\"dark\" variant=\"dark\">\r\n                    <ReactBootStrap.Navbar.Brand href=\"/\">TMDB Client</ReactBootStrap.Navbar.Brand>\r\n                    <ReactBootStrap.Nav className=\"mr-auto\" style={{alignItems: 'flex-end'}}>\r\n                        <ReactBootStrap.Nav.Link href=\"/\">Home</ReactBootStrap.Nav.Link>\r\n                        <ReactBootStrap.Nav.Link href=\"/\">Favorites</ReactBootStrap.Nav.Link>\r\n                        <ReactBootStrap.Nav.Link href=\"/\">Upcoming Movies</ReactBootStrap.Nav.Link>\r\n                        <ReactBootStrap.Nav.Link href=\"/\">Search</ReactBootStrap.Nav.Link>\r\n                    </ReactBootStrap.Nav>\r\n\r\n                </ReactBootStrap.Navbar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport HomeComponent from './components/HomeComponent';\nimport DetailViewComponent from './components/DetailViewComponent';\nimport ReviewComponent from './components/ReviewComponent';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport NavBar from './components/NavBar'\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <NavBar />\n      <BrowserRouter>\n        <Switch>\n\n          <Route path='/reviews/:id' render={(props) => <ReviewComponent {...props} />}/>\n          <Route path='/detail/:id' render={(props) => <DetailViewComponent {...props} />}/>\n          \n          <Route path='/'>\n            <HomeComponent />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}